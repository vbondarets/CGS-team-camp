#!/bin/bash
echo "Precommit hook is running..."
USER_NAME="vbondarets"
ESLINT="$(git rev-parse --show-toplevel)/node_modules/.bin/eslint"

FRONTEND_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep -E '(^packages/frontend)(.*)(ts$|tsx$)')
BACKEND_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep -E '(^packages/backend)(.*)(ts$)')
PASS=true

echo "=============================================================================================================="
echo "Checking branch name..."
LC_ALL=C

local_branch="$(git rev-parse --abbrev-ref HEAD)"

valid_branch_regex="^(feature|bug|refactoring|hotfix)\/$USER_NAME\/[a-z0-9-]+$"

message="
\t\033[41m
There is something wrong with your branch name. \n 
Branch names in this project must adhere to this contract: \n 
feature|bugfix|improvement|library|prerelease|release|hotfix/$USER_NAME/feature-name. \n 
Your commit will be rejected. You should rename your branch to a valid name and try again.
\033[0m"

if [[ ! $local_branch =~ $valid_branch_regex ]]
then
    echo "$message"
    exit 1
fi
echo "\t\033[32m Success! \033[0m"

echo "=============================================================================================================="
echo "Staged changes:"
echo '\t\033[32mFrontend tracked files:\033[0m ' $FRONTEND_FILES
echo '\t\033[32mBackend tracked files:\033[0m ' $BACKEND_FILES
echo "=============================================================================================================="
echo "Frontend validation started...";
for FILE in $FRONTEND_FILES
do
	$ESLINT "$FILE"
  if [[ "$?" == 0 ]]; then
    echo "\t\033[32m ESLint Passed: $FILE \033[0m"
  else
    echo "\t\033[41m ESLint Failed: $FILE \033[0m"
    PASS=false
  fi
done
echo "=============================================================================================================="
echo "Backend validation started...";

for FILE in $BACKEND_FILES
do
	$ESLINT "$FILE"
  if [[ "$?" == 0 ]]; then
    echo "\t\033[32m ESLint Passed: $FILE \033[0m"
  else
    echo "\t\033[41m ESLint Failed: $FILE \033[0m"
    PASS=false
  fi
done
echo "=============================================================================================================="

if ! $PASS; then
  echo "\033[41m COMMIT FAILED:\033[0m Your commit contains files that should pass ESLint but do not. Please fix the ESLint errors and try again.\n \033[0m"
  exit 1
fi

echo "\t\033[32m Success! \033[0m"

exit $?